<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-4.2.xsd
	http://www.springframework.org/schema/tool http://www.springframework.org/schema/tool/spring-tool.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd ">

    <!-- **********		业务注册		********** -->
    <!-- 配置扫描器   排除controller-->
    <context:component-scan base-package="cn.lc.springmybatisplus">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!-- **********		数据源配置		********** -->
    <!-- 1. 加载外部属性配置文件  -->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    <!-- 2. 配置Druid连接池 -->
    <bean name="c3p0DataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="jdbcUrl" value="${jdbc.url}"></property>
        <property name="driverClass" value="${jdbc.driver}"></property>
        <property name="user" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>

    <!-- **********		事务管理器		********** -->
    <bean id="dataSourceTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="c3p0DataSource"></property>
    </bean>

    <!-- 开启注解的事务管理 -->
    <tx:annotation-driven transaction-manager="dataSourceTransactionManager"/>


    <!-- **********		整合Mybatis-Plus		********** -->
    <!-- 1. 注册SqlSessionFactoryBean
     Mybatis : class="org.mybatis.spring.SqlSessionFactoryBean"
     Mybatis-plus : class="com.baomidou.mybatisplus.spring.MybatisSqlSessionFactoryBean"
     -->
    <bean id="sqlSessionFactory" class="com.baomidou.mybatisplus.spring.MybatisSqlSessionFactoryBean">
        <!-- 指定mybatis主配置文件的位置 -->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!-- 连接池注入 -->
        <property name="dataSource" ref="c3p0DataSource"/>
        <!-- 指定mapper文件的位置 sql的xml映射文件-->
        <!--<property name="mapperLocations" value="classpath:mapper/*.xml"/>-->
        <!--别名处理-->
        <property name="typeAliasesPackage" value="cn.lc.springmybatisplus.bean"/>
        <!--注入 全局策略-->
        <property name="globalConfig" ref="globalConfiguration"></property>

        <!--插件注册-->
        <property name="plugins">
            <list>
                <!--分页插件注册-->
                <bean class="com.baomidou.mybatisplus.plugins.PaginationInterceptor"></bean>

                <!--执行分析插件注册-->
                <bean class="com.baomidou.mybatisplus.plugins.SqlExplainInterceptor">
                    <!--停止删除修改全表操作-->
                    <property name="stopProceed" value="true"></property>
                </bean>

                <!--性能分析插件注册-->
                <bean class="com.baomidou.mybatisplus.plugins.PerformanceInterceptor">
                    <property name="format" value="true"></property>
                    <!--SQL 执行最大时长，超过自动停止运行，有助于发现问题。-->
                    <!--<property name="maxTime" value="50"></property>-->
                </bean>
            </list>
        </property>
    </bean>
    <!-- 2. 扫描Mapper映射配置 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!-- 扫描所有的mapper接口 加入到IOC容器中 -->
        <property name="basePackage" value="cn.lc.springmybatisplus.mapper"/>
    </bean>

    <!-- **********		批量执行的SqlSession		********** -->
    <!--<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"/>
        <constructor-arg name="executorType" value="BATCH"/>
    </bean>-->

    <!-- **********		定义MybatisPlus的全局策略配置		********** -->
    <bean id="globalConfiguration" class="com.baomidou.mybatisplus.entity.GlobalConfiguration">
        <!--在2.3以上  默认就是true-->
        <property name="dbColumnUnderline" value="true"></property>
        <!--主键自增 不用所有实体类配置 @TableId(type = IdType.AUTO )-->
        <property name="idType" value="0"></property>
        <!--全局表前缀配置-->
        <!--<property name="tablePrefix" value="p_"></property>-->
    </bean>



</beans>